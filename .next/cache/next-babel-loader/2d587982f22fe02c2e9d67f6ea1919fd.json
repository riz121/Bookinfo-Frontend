{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport * as t from \"../types\";\nconst initialState = {\n  bookinfoList: [],\n  selectedbookinfo: null,\n  isModalOpen: false,\n  viewMode: false\n};\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case t.MODAL_OPEN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isModalOpen: action.payload\n      });\n\n    case t.bookinfo_FETCH_SUCCEEDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookinfoList: action.payload\n      });\n\n    case t.bookinfo_ADD_SUCCEEDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookinfoList: [action.payload, ...state.bookinfoList]\n      });\n\n    case t.bookinfo_UPDATE_SUCCEEDED:\n      const updatedbookinfo = state.bookinfoList.map(bookinfo => {\n        if (bookinfo._id === action.payload._id) {\n          return _objectSpread(_objectSpread({}, bookinfo), {}, {\n            title: action.payload.title,\n            isbn: action.payload.isbn,\n            qty: action.payload.qty,\n            author: action.payload.author\n          });\n        }\n\n        return bookinfo;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookinfoList: updatedbookinfo\n      });\n\n    case t.bookinfo_DELETE_SUCCEEDED:\n      const newbookinfoList = state.bookinfoList.filter(bookinfo => bookinfo._id !== action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bookinfoList: newbookinfoList\n      });\n\n    case t.bookinfo_SELECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedbookinfo: action.payload // payload should be full object\n\n      });\n\n    case t.bookinfo_SELECTED_VIEW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        viewMode: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"sources":["/Users/rizwanahmed/Documents/node /Bookinfo-Frontend/store/reducers/bookinfo.js"],"names":["HYDRATE","t","initialState","bookinfoList","selectedbookinfo","isModalOpen","viewMode","mainReducer","state","action","type","payload","MODAL_OPEN","bookinfo_FETCH_SUCCEEDED","bookinfo_ADD_SUCCEEDED","bookinfo_UPDATE_SUCCEEDED","updatedbookinfo","map","bookinfo","_id","title","isbn","qty","author","bookinfo_DELETE_SUCCEEDED","newbookinfoList","filter","bookinfo_SELECTED","bookinfo_SELECTED_VIEW"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,YAAY,EAAE,EADM;AAEpBC,EAAAA,gBAAgB,EAAE,IAFE;AAGpBC,EAAAA,WAAW,EAAE,KAHO;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,OAAL;AACC,6CAAYQ,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACD,SAAKV,CAAC,CAACW,UAAP;AACC,6CACIJ,KADJ;AAECH,QAAAA,WAAW,EAAEI,MAAM,CAACE;AAFrB;;AAID,SAAKV,CAAC,CAACY,wBAAP;AACC,6CACIL,KADJ;AAECL,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAFtB;;AAID,SAAKV,CAAC,CAACa,sBAAP;AACC,6CACIN,KADJ;AAECL,QAAAA,YAAY,EAAE,CAACM,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACL,YAA1B;AAFf;;AAID,SAAKF,CAAC,CAACc,yBAAP;AACC,YAAMC,eAAe,GAAGR,KAAK,CAACL,YAAN,CAAmBc,GAAnB,CAAwBC,QAAD,IAAc;AAC5D,YAAIA,QAAQ,CAACC,GAAT,KAAiBV,MAAM,CAACE,OAAP,CAAeQ,GAApC,EAAyC;AACxC,iDACID,QADJ;AAECE,YAAAA,KAAK,EAAEX,MAAM,CAACE,OAAP,CAAeS,KAFvB;AAGCC,YAAAA,IAAI,EAAEZ,MAAM,CAACE,OAAP,CAAeU,IAHtB;AAICC,YAAAA,GAAG,EAAEb,MAAM,CAACE,OAAP,CAAeW,GAJrB;AAKCC,YAAAA,MAAM,EAAEd,MAAM,CAACE,OAAP,CAAeY;AALxB;AAOA;;AACD,eAAOL,QAAP;AACA,OAXuB,CAAxB;AAaA,6CAAYV,KAAZ;AAAmBL,QAAAA,YAAY,EAAEa;AAAjC;;AACD,SAAKf,CAAC,CAACuB,yBAAP;AACC,YAAMC,eAAe,GAAGjB,KAAK,CAACL,YAAN,CAAmBuB,MAAnB,CACtBR,QAAD,IAAcA,QAAQ,CAACC,GAAT,KAAiBV,MAAM,CAACE,OADf,CAAxB;AAGA,6CACIH,KADJ;AAECL,QAAAA,YAAY,EAAEsB;AAFf;;AAID,SAAKxB,CAAC,CAAC0B,iBAAP;AACC,6CACInB,KADJ;AAECJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAF1B,CAEoC;;AAFpC;;AAID,SAAKV,CAAC,CAAC2B,sBAAP;AACC,6CACIpB,KADJ;AAECF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFlB;;AAKD;AACC,aAAOH,KAAP;AArDF;AAwDA,CAzDD;;AA2DA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport * as t from \"../types\";\n\nconst initialState = {\n\tbookinfoList: [],\n\tselectedbookinfo: null,\n\tisModalOpen: false,\n\tviewMode: false,\n};\n\nconst mainReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase HYDRATE:\n\t\t\treturn { ...state, ...action.payload };\n\t\tcase t.MODAL_OPEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisModalOpen: action.payload,\n\t\t\t};\n\t\tcase t.bookinfo_FETCH_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbookinfoList: action.payload,\n\t\t\t};\n\t\tcase t.bookinfo_ADD_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbookinfoList: [action.payload, ...state.bookinfoList],\n\t\t\t};\n\t\tcase t.bookinfo_UPDATE_SUCCEEDED:\n\t\t\tconst updatedbookinfo = state.bookinfoList.map((bookinfo) => {\n\t\t\t\tif (bookinfo._id === action.payload._id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...bookinfo,\n\t\t\t\t\t\ttitle: action.payload.title,\n\t\t\t\t\t\tisbn: action.payload.isbn,\n\t\t\t\t\t\tqty: action.payload.qty,\n\t\t\t\t\t\tauthor: action.payload.author,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn bookinfo;\n\t\t\t});\n\n\t\t\treturn { ...state, bookinfoList: updatedbookinfo };\n\t\tcase t.bookinfo_DELETE_SUCCEEDED:\n\t\t\tconst newbookinfoList = state.bookinfoList.filter(\n\t\t\t\t(bookinfo) => bookinfo._id !== action.payload\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbookinfoList: newbookinfoList,\n\t\t\t};\n\t\tcase t.bookinfo_SELECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedbookinfo: action.payload,  // payload should be full object\n\t\t\t  };\n\t\tcase t.bookinfo_SELECTED_VIEW:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tviewMode: action.payload, \n\t\t\t  };\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n};\n\nexport default mainReducer;\n"]},"metadata":{},"sourceType":"module"}