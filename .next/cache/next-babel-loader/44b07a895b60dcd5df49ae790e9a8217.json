{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchbookinfos),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchFetchbookinfos),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addbookinfo),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddbookinfo),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(deletebookinfo),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovebookinfo),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(updatebookinfo),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdatebookinfo),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeLatest } from \"redux-saga/effects\";\nimport * as t from \"../types\";\nvar apiUrl = process.env.BACKEND_URL;\n\nfunction fetchbookinfos() {\n  var response, bookinfoList;\n  return _regeneratorRuntime.wrap(function fetchbookinfos$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(\"test\", apiUrl);\n          _context.next = 4;\n          return fetch(apiUrl + \"/books/\");\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return response.json();\n\n        case 7:\n          bookinfoList = _context.sent;\n          console.log(\"bookinfoList\", bookinfoList);\n          _context.next = 11;\n          return put({\n            type: t.bookinfo_FETCH_SUCCEEDED,\n            payload: bookinfoList\n          });\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put({\n            type: t.bookinfo_FETCH_FAILED,\n            payload: _context.t0.message\n          });\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}\n\nfunction watchFetchbookinfos() {\n  return _regeneratorRuntime.wrap(function watchFetchbookinfos$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(t.bookinfo_FETCH_REQUESTED, fetchbookinfos);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction addbookinfo(action) {\n  var _action$payload, _action$payload2, _action$payload3, _action$payload4, body, response, newbookinfo;\n\n  return _regeneratorRuntime.wrap(function addbookinfo$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(\"action\", action);\n          body = {\n            title: ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.title) || \"\",\n            isbn: ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.isbn) || \"\",\n            qty: ((_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.qty) || \"\",\n            author: {\n              name: ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.author) || \"\"\n            }\n          };\n          _context3.next = 5;\n          return fetch(\"http://localhost:3001/api/v1/books\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          });\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return response.json();\n\n        case 8:\n          newbookinfo = _context3.sent;\n          _context3.next = 11;\n          return put({\n            type: t.bookinfo_ADD_SUCCEEDED,\n            payload: newbookinfo\n          });\n\n        case 11:\n          _context3.next = 17;\n          break;\n\n        case 13:\n          _context3.prev = 13;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 17;\n          return put({\n            type: t.bookinfo_ADD_FAILED,\n            payload: _context3.t0.message\n          });\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 13]]);\n}\n\nfunction watchAddbookinfo() {\n  return _regeneratorRuntime.wrap(function watchAddbookinfo$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(t.bookinfo_ADD_REQUESTED, addbookinfo);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction deletebookinfo(action) {\n  var response, deletedbookinfo;\n  return _regeneratorRuntime.wrap(function deletebookinfo$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return fetch(\"http://localhost:3001/api/v1/books/\" + action.payload, {\n            method: \"DELETE\"\n          });\n\n        case 3:\n          response = _context5.sent;\n          _context5.next = 6;\n          return response.json({\n            message: \"Record was deleted\"\n          });\n\n        case 6:\n          deletedbookinfo = _context5.sent;\n          _context5.next = 9;\n          return put({\n            type: t.bookinfo_DELETE_SUCCEEDED,\n            payload: deletedbookinfo.id\n          });\n\n        case 9:\n          _context5.next = 15;\n          break;\n\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 15;\n          return put({\n            type: t.bookinfo_DELETE_FAILED,\n            payload: _context5.t0.message\n          });\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 11]]);\n}\n\nfunction watchRemovebookinfo() {\n  return _regeneratorRuntime.wrap(function watchRemovebookinfo$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(t.bookinfo_DELETE_REQUESTED, deletebookinfo);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction updatebookinfo(action) {\n  var _action$payload5, _action$payload6, _action$payload7, _action$payload8, body, response, updatedbookinfo;\n\n  return _regeneratorRuntime.wrap(function updatebookinfo$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          body = {\n            title: ((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.title) || \"\",\n            isbn: ((_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.isbn) || \"\",\n            qty: ((_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : _action$payload7.qty) || \"\",\n            author: {\n              name: ((_action$payload8 = action.payload) === null || _action$payload8 === void 0 ? void 0 : _action$payload8.author) || \"\"\n            }\n          };\n          _context7.next = 4;\n          return fetch(\"http://localhost:3001/api/v1/books/\" + action.payload._id, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          });\n\n        case 4:\n          response = _context7.sent;\n          _context7.next = 7;\n          return response.json({\n            message: \"Record has been Updated\"\n          });\n\n        case 7:\n          updatedbookinfo = _context7.sent;\n          _context7.next = 10;\n          return put({\n            type: t.bookinfo_UPDATE_SUCCEEDED,\n            payload: updatedbookinfo\n          });\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 16;\n          return put({\n            type: t.bookinfo_UPDATE_FAILED,\n            payload: _context7.t0.message\n          });\n\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 12]]);\n}\n\nfunction watchUpdatebookinfo() {\n  return _regeneratorRuntime.wrap(function watchUpdatebookinfo$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(t.bookinfo_UPDATE_REQUESTED, updatebookinfo);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([watchFetchbookinfos(), watchAddbookinfo(), watchRemovebookinfo(), watchUpdatebookinfo()]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/rizwanahmed/Documents/node /Bookinfo-Frontend/store/sagas/bookinfo.js"],"names":["fetchbookinfos","watchFetchbookinfos","addbookinfo","watchAddbookinfo","deletebookinfo","watchRemovebookinfo","updatebookinfo","watchUpdatebookinfo","rootSaga","all","put","takeLatest","t","apiUrl","process","env","BACKEND_URL","console","log","fetch","response","json","bookinfoList","type","bookinfo_FETCH_SUCCEEDED","payload","bookinfo_FETCH_FAILED","message","bookinfo_FETCH_REQUESTED","action","body","title","isbn","qty","author","name","method","headers","JSON","stringify","newbookinfo","bookinfo_ADD_SUCCEEDED","bookinfo_ADD_FAILED","bookinfo_ADD_REQUESTED","deletedbookinfo","bookinfo_DELETE_SUCCEEDED","id","bookinfo_DELETE_FAILED","bookinfo_DELETE_REQUESTED","_id","updatedbookinfo","bookinfo_UPDATE_SUCCEEDED","bookinfo_UPDATE_FAILED","bookinfo_UPDATE_REQUESTED"],"mappings":"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","sourcesContent":["import { all, put, takeLatest } from \"redux-saga/effects\";\nimport * as t from \"../types\";\n\nconst apiUrl = process.env.BACKEND_URL;\n\nfunction* fetchbookinfos() {\n\ttry {\n\t\tconsole.log(\"test\",apiUrl)\n\t\tconst response = yield fetch(apiUrl + \"/books/\");\n\t\n\t\tconst bookinfoList = yield response.json();\n\n\t\tconsole.log(\"bookinfoList\",bookinfoList)\n\n\t\tyield put({\n\t\t\ttype: t.bookinfo_FETCH_SUCCEEDED,\n\t\t\tpayload: bookinfoList,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\t\n\t\t\ttype: t.bookinfo_FETCH_FAILED,\n\t\t\tpayload: error.message,\n\t\t});\n\t}\n}\n\nfunction* watchFetchbookinfos() {\n\tyield takeLatest(t.bookinfo_FETCH_REQUESTED, fetchbookinfos);\n}\n\nfunction* addbookinfo(action) {\n\ttry {\n\t\tconsole.log(\"action\",action)\n\t\tconst body = {\n\t\t\ttitle: action.payload?.title || \"\",\n\t\t\tisbn: action.payload?.isbn || \"\",\n\t\t\tqty: action.payload?.qty || \"\",\n\t\t\tauthor: {\n\t\t\t  name: action.payload?.author || \"\",\n\t\t\t},\n\t\t  };\n\t\t  \n\t\t  const response = yield fetch(\"http://localhost:3001/api/v1/books\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Accept\": \"application/json\"\n\t\t\t  },\n\t\t\tbody: JSON.stringify(body),\n\t\t  });\n\n\t\tconst newbookinfo = yield response.json();\n\n\t\tyield put({\n\t\t\ttype: t.bookinfo_ADD_SUCCEEDED,\n\t\t\tpayload: newbookinfo,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: t.bookinfo_ADD_FAILED,\n\t\t\tpayload: error.message,\n\t\t});\n\t}\n}\n\nfunction* watchAddbookinfo() {\n\tyield takeLatest(t.bookinfo_ADD_REQUESTED, addbookinfo);\n}\n\nfunction* deletebookinfo(action) {\n\ttry {\n\t\tconst response = yield fetch(\"http://localhost:3001/api/v1/books/\" + action.payload, {\n\t\t\tmethod: \"DELETE\",\n\t\t});\n\n\t\tconst deletedbookinfo = yield response.json({message:\"Record was deleted\"});\n\t\t\n\n\t\tyield put({\n\t\t\ttype: t.bookinfo_DELETE_SUCCEEDED,\n\t\t\tpayload: deletedbookinfo.id,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: t.bookinfo_DELETE_FAILED,\n\t\t\tpayload: error.message,\n\t\t});\n\t}\n}\n\nfunction* watchRemovebookinfo() {\n\tyield takeLatest(t.bookinfo_DELETE_REQUESTED, deletebookinfo);\n}\n\nfunction* updatebookinfo(action) {\n\ttry {\n\t\tconst body = {\n\t\t\ttitle: action.payload?.title || \"\",\n\t\t\tisbn: action.payload?.isbn || \"\",\n\t\t\tqty: action.payload?.qty || \"\",\n\t\t\tauthor: {\n\t\t\t  name: action.payload?.author || \"\",\n\t\t\t},\n\t\t  };\n\t\tconst response = yield fetch(\"http://localhost:3001/api/v1/books/\" + action.payload._id, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Accept\": \"application/json\"\n\t\t\t  },\n\t\t\tbody: JSON.stringify(body),\n\t\t});\n\n\t\tconst updatedbookinfo = yield response.json({ message :\"Record has been Updated\"});\n\n\t\tyield put({\n\t\t\ttype: t.bookinfo_UPDATE_SUCCEEDED,\n\t\t\tpayload: updatedbookinfo,\n\t\t});\n\t} catch (error) {\n\t\tyield put({\n\t\t\ttype: t.bookinfo_UPDATE_FAILED,\n\t\t\tpayload: error.message,\n\t\t});\n\t}\n}\n\nfunction* watchUpdatebookinfo() {\n\tyield takeLatest(t.bookinfo_UPDATE_REQUESTED, updatebookinfo);\n}\n\nexport default function* rootSaga() {\n\tyield all([\n\t\twatchFetchbookinfos(),\n\t\twatchAddbookinfo(),\n\t\twatchRemovebookinfo(),\n\t\twatchUpdatebookinfo(),\n\t]);\n}\n"]},"metadata":{},"sourceType":"module"}